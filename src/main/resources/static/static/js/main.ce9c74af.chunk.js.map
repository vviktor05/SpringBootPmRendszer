{"version":3,"sources":["components/PrivateRoute.js","components/NavigationBar.js","components/LoginForm.js","util/BackendURL.ts","components/ProjectList.js","components/ProjectForm.js","components/CustomerList.js","components/CustomerForm.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","NavigationBar","Navbar","bg","variant","to","className","Toggle","aria-controls","Collapse","id","Nav","Text","localStorage","getItem","React","Project","loginChange","event","setState","target","name","value","state","email","password","bind","onSubmit","preventDefault","this","checkDetails","history","push","length","alert","Card","style","width","margin","Header","Form","Body","Row","Group","as","Col","controlId","Label","Control","required","type","autoComplete","onChange","placeholder","Footer","Button","url","path","ProjectLista","deleteProject","projectId","window","confirm","axios","delete","then","response","status","projects","filter","project","get","data","Table","bordered","hover","striped","marginTop","align","colSpan","sort","a","b","map","key","customer","orderDate","deadline","developmentArea","projectStatus","priority","projectLeader","onClick","size","initialState","customerId","developmentAreaId","projectStatusId","priorityId","statusId","description","projectChange","projectList","resetProject","customerList","developmentAreaList","projectStatusList","priorityList","statusList","findAllLists","match","params","findProjectById","findProjectIndexInArray","catch","error","console","array","i","job","skill","startDate","phoneNumber","lastLoginDate","editProject","addProject","post","put","Date","onReset","rows","marginLeft","CustomerList","deleteCustomer","customers","phone","website","zipCode","locality","streetAddress","CustomerForm","resetCustomer","customerChange","findCustomerById","editCustomer","addCustomer","App","Container","fluid","lg","exact","LoginForm","ProjectList","ProjectForm","NotFound","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ce9c74af.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        // localStorage.getItem('user')\r\n        true ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n)","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavigationBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Link to={\"/\"} className=\"navbar-brand\">\r\n                    Projektmenedzsment rendszer\r\n                </Link>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Link to={\"/projects\"} className=\"nav-link\">Projektek</Link>\r\n                        <Link to={\"/customers\"} className=\"nav-link\">Megrendelők</Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Navbar.Text>\r\n                        {localStorage.getItem('user') ? <span>Belépve : {localStorage.getItem('user')} | <Link to=\"/login\">Kijelentkezés</Link> </span> : <Link to=\"/login\">Bejelentkezés</Link>}\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationBar;","import React, { Component } from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport { Card, Form, Button, Col } from 'react-bootstrap';\r\n// import axios from 'axios';\r\n// import { url } from '../util/BackendURL';\r\n// import { userService } from '../services/userService';\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // userService.logout();\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        this.loginChange = this.loginChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.checkDetails()) {\r\n            // const user = {\r\n            //     email: this.state.email,\r\n            //     password: this.state.password,\r\n            // }\r\n\r\n            // axios.post(url(\"api/project_manager/projects\"), project)\r\n            //     .then(response => {\r\n            //         if (response.status === 200) {\r\n            //             this.resetProject();\r\n            //             alert(\"A project elmentve!\");\r\n            //             this.projectList();\r\n            //         }\r\n            //     });\r\n            this.props.history.push(\"/projects\");\r\n        }\r\n    }\r\n\r\n    checkDetails() {\r\n        if (this.state.email.length < 5) {\r\n            alert(\"Az email nem lehet rövidebb 5 karakternél!\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    loginChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { email, password } = this.state;\r\n\r\n        return (\r\n            <Card style={{ width: \"25%\", margin: \"0px auto\" }} className=\"border border-dark bg-dark text-white\">\r\n                <Card.Header> Bejelentkezés </Card.Header>\r\n                <Form onSubmit={this.onSubmit} id=\"projektForm\">\r\n                    <Card.Body>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control required\r\n                                    type=\"email\" name=\"email\"\r\n                                    value={email}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.loginChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder=\"Add meg az email címed\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formPassword\">\r\n                                <Form.Label>Jelszó</Form.Label>\r\n                                <Form.Control required\r\n                                    type=\"password\" name=\"password\"\r\n                                    value={password}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.loginChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder=\"Add meg a jelszavad\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button variant=\"primary\" type=\"submit\">Bejelentkezés</Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n            </Card >\r\n        )\r\n    }\r\n}","const BACKEND_URL = 'http://localhost:8080';\r\n\r\nexport const url = (path: string): string => `${BACKEND_URL}/${path}`;","import React, { Component } from 'react';\r\nimport { Card, Table, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { url } from '../util/BackendURL';\r\n\r\nexport default class ProjectLista extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            projects: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(url(\"api/project_manager/projects\"))\r\n            .then(response => response.data)\r\n            .then((data) => this.setState({ projects: data }));\r\n    }\r\n\r\n    deleteProject = (projectId) => {\r\n        if (window.confirm('Biztosan törli a kiválasztott projektet?')) {\r\n            axios.delete(url(\"api/project_manager/projects/\" + projectId))\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        this.setState({\r\n                            projects: this.state.projects.filter(project => project.id !== projectId)\r\n                        });\r\n                        alert(\"A projekt törölve!\");\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <Card className=\"border border-dark bg-dark text-white\">\r\n                <Card.Header>Projektek</Card.Header>\r\n                <Card.Body>\r\n                    <Link to={\"/projects/add\"}><Button variant=\"success\">Projekt hozzáadása</Button></Link>\r\n                    <Table bordered hover striped variant=\"dark\" style={{ marginTop: \"20px\" }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Név</th>\r\n                                <th>Megrendelő</th>\r\n                                <th>Megrendelés dátuma</th>\r\n                                <th>Határidő dátuma</th>\r\n                                <th>Fejlesztési terület</th>\r\n                                <th>Projekt állapot</th>\r\n                                <th>Prioritás</th>\r\n                                <th>Projektvezető</th>\r\n                                <th>Státusz</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.projects.length === 0 ?\r\n                                    <tr align=\"center\">\r\n                                        <td colSpan=\"10\">Nincs elérhető projekt.</td>\r\n                                    </tr>\r\n                                    :\r\n                                    this.state.projects.sort((a, b) => a.id - b.id).map((project) => (\r\n                                        <tr key={project.id}>\r\n                                            <td>{project.name}</td>\r\n                                            <td>{project.customer.name}</td>\r\n                                            <td>{project.orderDate}</td>\r\n                                            <td>{project.deadline}</td>\r\n                                            <td>{project.developmentArea.name}</td>\r\n                                            <td>{project.projectStatus.name}</td>\r\n                                            <td>{project.priority.name}</td>\r\n                                            <td>{project.projectLeader.name}</td>\r\n                                            <td>{project.status.name}</td>\r\n                                            <td>\r\n                                                {/* <Link to={\"projects/details/\" + project.id} className=\"mr-2 btn btn-sm btn-primary\">Információ</Link> */}\r\n                                                <Link to={\"projects/edit/\" + project.id} className=\"mr-2 btn btn-sm btn-primary\">Módosít</Link>\r\n                                                <Button variant=\"danger\" onClick={this.deleteProject.bind(this, project.id)} size=\"sm\">Töröl</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Form, Button, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { url } from '../util/BackendURL';\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            customerId: 1,\r\n            orderDate: '',\r\n            deadline: '',\r\n            developmentAreaId: 1,\r\n            projectStatusId: 1,\r\n            priorityId: 1,\r\n            statusId: 1,\r\n            description: '',\r\n            customerList: [],\r\n            developmentAreaList: [],\r\n            projectStatusList: [],\r\n            priorityList: [],\r\n            statusList: []\r\n        };\r\n\r\n        this.projectChange = this.projectChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        id: '', name: '', customerId: 1, orderDate: '', deadline: '', developmentAreaId: 1, projectStatusId: 1, priorityId: 1, statusId: 1, description: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.findAllLists();\r\n\r\n        const projectId = +this.props.match.params.id;\r\n        if (projectId) {\r\n            this.findProjectById(projectId);\r\n        }\r\n    }\r\n\r\n    findAllLists() {\r\n        axios.get(url(\"api/project_manager/customers\"))\r\n            .then(response => response.data)\r\n            .then((data) => this.setState({ customerList: data }));\r\n\r\n        axios.get(url(\"api/project_manager/development_areas\"))\r\n            .then(response => response.data)\r\n            .then((data) => this.setState({ developmentAreaList: data }));\r\n\r\n        axios.get(url(\"api/project_manager/project_statuses\"))\r\n            .then(response => response.data)\r\n            .then((data) => this.setState({ projectStatusList: data }));\r\n\r\n        axios.get(url(\"api/project_manager/priorities\"))\r\n            .then(response => response.data)\r\n            .then((data) => this.setState({ priorityList: data }));\r\n\r\n        axios.get(url(\"api/project_manager/statuses\"))\r\n            .then(response => response.data)\r\n            .then((data) => this.setState({ statusList: data }));\r\n    }\r\n\r\n    findProjectById(projectId) {\r\n        axios.get(url(\"api/project_manager/projects/id/\" + projectId))\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    this.setState({\r\n                        id: response.data.id,\r\n                        name: response.data.name,\r\n                        customerId: this.findProjectIndexInArray(this.state.customerList, response.data.customer.id),\r\n                        orderDate: response.data.orderDate,\r\n                        deadline: response.data.deadline,\r\n                        developmentAreaId: this.findProjectIndexInArray(this.state.developmentAreaList, response.data.developmentArea.id),\r\n                        projectStatusId: this.findProjectIndexInArray(this.state.projectStatusList, response.data.projectStatus.id),\r\n                        priorityId: this.findProjectIndexInArray(this.state.priorityList, response.data.priority.id),\r\n                        statusId: this.findProjectIndexInArray(this.state.statusList, response.data.status.id),\r\n                        description: response.data.description\r\n                    });\r\n                }\r\n            }).catch((error) => {\r\n                console.error(\"Hiba - \" + error);\r\n            });\r\n    }\r\n\r\n    findProjectIndexInArray(array, id) {\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (array[i].id === id) {\r\n                return i + 1;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const testProjectLeader = {\r\n            id: 1,\r\n            name: \"Horváth Krisztina\",\r\n            email: \"manager@gmail.com\",\r\n            job: {\r\n                id: 1,\r\n                name: \"Projektvezető\"\r\n            },\r\n            developmentArea: {\r\n                id: 1,\r\n                name: \"Asztali alkalmazás\"\r\n            },\r\n            skill: {\r\n                id: 4,\r\n                name: \"Senior\"\r\n            },\r\n            startDate: \"2020-01-31\",\r\n            phoneNumber: \"06701122345\",\r\n            lastLoginDate: \"2020-03-07 18:28:22\"\r\n        };\r\n\r\n        if (this.checkDetails()) {\r\n            const project = {\r\n                name: this.state.name,\r\n                customer: this.state.customerList[this.state.customerId - 1],\r\n                orderDate: this.state.orderDate,\r\n                deadline: this.state.deadline,\r\n                developmentArea: this.state.developmentAreaList[this.state.developmentAreaId - 1],\r\n                projectStatus: this.state.projectStatusList[this.state.projectStatusId - 1],\r\n                priority: this.state.priorityList[this.state.priorityId - 1],\r\n                projectLeader: testProjectLeader,\r\n                status: this.state.statusList[this.state.statusId - 1],\r\n                description: this.state.description\r\n            }\r\n\r\n            if (this.state.id) {\r\n                this.editProject(project);\r\n            } else {\r\n                this.addProject(project);\r\n            }\r\n        }\r\n    }\r\n\r\n    addProject(project) {\r\n        axios.post(url(\"api/project_manager/projects\"), project)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    this.resetProject();\r\n                    alert(\"A project elmentve!\");\r\n                    this.projectList();\r\n                }\r\n            });\r\n    }\r\n\r\n    editProject(project) {\r\n        axios.put(url(\"api/project_manager/projects/\" + this.state.id), project)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    this.resetProject();\r\n                    alert(\"A project elmentve!\");\r\n                    this.projectList();\r\n                }\r\n            });\r\n    }\r\n\r\n    checkDetails() {\r\n        if (this.state.name.length >= 5) {\r\n            if (new Date(this.state.orderDate) < new Date(this.state.deadline)) {\r\n                return true;\r\n            } else {\r\n                alert(\"A határidőnek késöbbi időpontnak kell lennie, mint a megrendelés dátumának!\");\r\n            }\r\n        } else {\r\n            alert(\"A projekt neve nem lehet rövidebb 5 karakternél!\");\r\n        }\r\n        return false;\r\n    }\r\n\r\n    projectChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    projectList = () => {\r\n        return this.props.history.push(\"/projects\");\r\n    }\r\n\r\n    resetProject = () => {\r\n        this.setState(() => this.initialState);\r\n    }\r\n\r\n    render() {\r\n        const { name, customerId, orderDate, deadline, developmentAreaId, projectStatusId, priorityId, statusId, description } = this.state;\r\n\r\n        return (\r\n            <Card style={{ width: \"75%\", margin: \"0px auto\" }} className=\"border border-dark bg-dark text-white\">\r\n                <Card.Header> {this.state.id ? \"Projekt módosítása\" : \"Projekt hozzáadása\"} </Card.Header>\r\n                <Form onReset={this.resetProject} onSubmit={this.onSubmit} id=\"projektForm\">\r\n                    <Card.Body>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formName\">\r\n                                <Form.Label>Projekt neve</Form.Label>\r\n                                <Form.Control required\r\n                                    type=\"text\" name=\"name\"\r\n                                    value={name}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.projectChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder=\"Add meg a projekt nevét\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formCustomer\">\r\n                                <Form.Label>Megrendelő</Form.Label>\r\n                                <Form.Control className={\"bg-dark text-white\"}\r\n                                    as=\"select\" name=\"customerId\"\r\n                                    value={customerId}\r\n                                    onChange={this.projectChange}>\r\n                                    {\r\n                                        this.state.customerList.map((customer) => (\r\n                                            <option key={customer.id} value={customer.id}>\r\n                                                {customer.name}\r\n                                            </option>\r\n                                        ))\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formOrderDate\">\r\n                                <Form.Label>Megrendelés dátuma</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    value={orderDate}\r\n                                    onChange={this.projectChange}\r\n                                    type=\"date\"\r\n                                    className={\"bg-dark text-white\"}\r\n                                    name=\"orderDate\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formDeadline\">\r\n                                <Form.Label>Határidő dátuma</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    value={deadline}\r\n                                    onChange={this.projectChange}\r\n                                    type=\"date\"\r\n                                    className={\"bg-dark text-white\"}\r\n                                    name=\"deadline\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formDevelopmentArea\">\r\n                                <Form.Label>Fejlesztési terület</Form.Label>\r\n                                <Form.Control className={\"bg-dark text-white\"} as=\"select\" name=\"developmentAreaId\"\r\n                                    value={developmentAreaId}\r\n                                    onChange={this.projectChange}>\r\n                                    {this.state.developmentAreaList.map((developmentArea) => (\r\n                                        <option key={developmentArea.id} value={developmentArea.id}>\r\n                                            {developmentArea.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formProjectStatus\">\r\n                                <Form.Label>Projekt állapot</Form.Label>\r\n                                <Form.Control className={\"bg-dark text-white\"} as=\"select\" name=\"projectStatusId\"\r\n                                    value={projectStatusId}\r\n                                    onChange={this.projectChange}>\r\n                                    {this.state.projectStatusList.map((projectStatus) => (\r\n                                        <option key={projectStatus.id} value={projectStatus.id}>\r\n                                            {projectStatus.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formPriority\">\r\n                                <Form.Label>Prioritás</Form.Label>\r\n                                <Form.Control className={\"bg-dark text-white\"} as=\"select\" name=\"priorityId\"\r\n                                    value={priorityId}\r\n                                    onChange={this.projectChange}\r\n                                >\r\n                                    {this.state.priorityList.map((priority) => (\r\n                                        <option key={priority.id} value={priority.id}>\r\n                                            {priority.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formStatus\">\r\n                                <Form.Label>Státusz</Form.Label>\r\n                                <Form.Control className={\"bg-dark text-white\"} as=\"select\" name=\"statusId\"\r\n                                    value={statusId}\r\n                                    onChange={this.projectChange}\r\n                                >\r\n                                    {this.state.statusList.map((status) => (\r\n                                        <option key={status.id} value={status.id}>\r\n                                            {status.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formDescription\">\r\n                                <Form.Label>Projekt leírása</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows=\"10\"\r\n                                    value={description}\r\n                                    onChange={this.projectChange}\r\n                                    placeholder=\"Add meg a projekt leírását.\"\r\n                                    className={\"bg-dark text-white\"}\r\n                                    name=\"description\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Link to={\"/projects\"}><Button variant=\"primary\">Vissza</Button></Link>\r\n                        <div style={{ \"display\": \"inline\", \"float\": \"right\" }}>\r\n                            <Button size=\"bg\" variant=\"success\" type=\"submit\">Mentés</Button>\r\n                            {this.state.id ? null : <Button style={{ marginLeft: \"10px\" }} size=\"bg\" variant=\"info\" type=\"reset\">Alaphelyzet</Button>}\r\n                        </div>\r\n                    </Card.Footer>\r\n                </Form>\r\n            </Card >\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Card, Table, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { url } from '../util/BackendURL';\r\n\r\nexport default class CustomerList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            customers: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(url(\"api/project_manager/customers\"))\r\n            .then(response => response.data)\r\n            .then((data) => this.setState({ customers: data }));\r\n    }\r\n\r\n    deleteCustomer = (customerId) => {\r\n        axios.delete(url(\"api/project_manager/customers/\" + customerId))\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    alert(\"A megrendelő törölve!\");\r\n                    this.setState({\r\n                        customers: this.state.customers.filter(customer => customer.id !== customerId)\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"border border-dark bg-dark text-white\">\r\n                <Card.Header>Megrendelők</Card.Header>\r\n                <Card.Body>\r\n                    <Link to={\"/customers/add\"}><Button variant=\"success\">Megrendelő hozzáadása</Button></Link>\r\n                    <Table bordered hover striped variant=\"dark\" style={{ marginTop: \"20px\" }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Név</th>\r\n                                <th>Telefonszám</th>\r\n                                <th>E-mail</th>\r\n                                <th>Weboldal</th>\r\n                                <th>Irányítószám</th>\r\n                                <th>Helység</th>\r\n                                <th>Utca, házszám</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.customers.length === 0 ?\r\n                                    <tr align=\"center\">\r\n                                        <td colSpan=\"10\">Nincs elérhető megrendelő.</td>\r\n                                    </tr> :\r\n                                    this.state.customers.sort((a, b) => a.id - b.id).map((customer) => (\r\n                                        <tr key={customer.id}>\r\n                                            <td>{customer.name}</td>\r\n                                            <td>{customer.phone}</td>\r\n                                            <td>{customer.email}</td>\r\n                                            <td>{customer.website}</td>\r\n                                            <td>{customer.zipCode}</td>\r\n                                            <td>{customer.locality}</td>\r\n                                            <td>{customer.streetAddress}</td>\r\n                                            <td>\r\n                                                <Link to={\"customers/edit/\" + customer.id} className=\"mr-2 btn btn-sm btn-primary\">Módosít</Link>\r\n                                                <Button variant=\"danger\" onClick={this.deleteCustomer.bind(this, customer.id)} size=\"sm\">Töröl</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Form, Button, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { url } from '../util/BackendURL';\r\n\r\nexport default class CustomerForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            website: '',\r\n            zipCode: '',\r\n            locality: '',\r\n            streetAddress: ''\r\n        };\r\n\r\n        this.customerChange = this.customerChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        id: '', name: '', phone: '', email: '', website: '', zipCode: '', locality: '', streetAddress: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const customerId = +this.props.match.params.id;\r\n        if (customerId) {\r\n            this.findCustomerById(customerId);\r\n        }\r\n    }\r\n\r\n    findCustomerById(customerId) {\r\n        axios.get(url(\"api/project_manager/customers/id/\" + customerId))\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    this.setState({\r\n                        id: response.data.id,\r\n                        name: response.data.name,\r\n                        phone: response.data.phone,\r\n                        email: response.data.email,\r\n                        website: response.data.website,\r\n                        zipCode: response.data.zipCode,\r\n                        locality: response.data.locality,\r\n                        streetAddress: response.data.streetAddress\r\n                    });\r\n                }\r\n            }).catch((error) => {\r\n                console.error(\"Hiba - \" + error);\r\n            });\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.checkDetails()) {\r\n            const customer = {\r\n                name: this.state.name,\r\n                phone: this.state.phone,\r\n                email: this.state.email,\r\n                website: this.state.website,\r\n                zipCode: this.state.zipCode,\r\n                locality: this.state.locality,\r\n                streetAddress: this.state.streetAddress,\r\n            }\r\n\r\n            if (this.state.id) {\r\n                this.editCustomer(customer);\r\n            } else {\r\n                this.addCustomer(customer);\r\n            }\r\n        }\r\n    }\r\n\r\n    addCustomer(customer) {\r\n        axios.post(url(\"api/project_manager/customers\"), customer)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    this.resetCustomer();\r\n                    alert(\"A megrendelő elmentve!\");\r\n                    this.customerList();\r\n                }\r\n            });\r\n    }\r\n\r\n    editCustomer(customer) {\r\n        axios.put(url(\"api/project_manager/customers/\" + this.state.id), customer)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    this.resetCustomer();\r\n                    alert(\"A megrendelő elmentve!\");\r\n                    this.customerList();\r\n                }\r\n            });\r\n    }\r\n\r\n    checkDetails() {\r\n        if (this.state.name.length >= 5) {\r\n            if (this.state.phone.length >= 5) {\r\n                if (this.state.email.length >= 5) {\r\n                    if (this.state.website.length >= 5) {\r\n                        if (this.state.zipCode.length >= 3) {\r\n                            if (this.state.locality.length >= 3) {\r\n                                if (this.state.streetAddress.length >= 5) {\r\n                                    return true;\r\n                                } else {\r\n                                    alert(\"Az utca, házszám nem lehet rövidebb 5 karakternél!\");\r\n                                }\r\n                            } else {\r\n                                alert(\"A helység neve nem lehet rövidebb 3 karakternél!\");\r\n                            }\r\n                        } else {\r\n                            alert(\"Az irányítószám nem lehet rövidebb 3 karakternél!\");\r\n                        }\r\n                    } else {\r\n                        alert(\"A weboldal nem lehet rövidebb 5 karakternél!\");\r\n                    }\r\n                } else {\r\n                    alert(\"Az email nem lehet rövidebb 5 karakternél!\");\r\n                }\r\n            } else {\r\n                alert(\"A telefonszám nem lehet rövidebb 5 karakternél!\");\r\n            }\r\n        } else {\r\n            alert(\"A név nem lehet rövidebb 5 karakternél!\");\r\n        }\r\n        return false;\r\n    }\r\n\r\n    customerChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    resetCustomer = () => {\r\n        this.setState(() => this.initialState);\r\n    }\r\n\r\n    customerList = () => {\r\n        return this.props.history.push(\"/customers\");\r\n    }\r\n\r\n    render() {\r\n        const { name, phone, email, website, zipCode, locality, streetAddress } = this.state;\r\n\r\n        return (\r\n            <Card style={{ width: \"75%\", margin: \"0px auto\" }} className=\"border border-dark bg-dark text-white\">\r\n                <Card.Header>{this.state.id ? \"Megrendelő módosítása\" : \"Megrendelő hozzáadása\"}</Card.Header>\r\n                <Form onReset={this.resetCustomer} onSubmit={this.onSubmit} id=\"customerForm\">\r\n                    <Card.Body>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formName\">\r\n                                <Form.Label>Megrendelő neve</Form.Label>\r\n                                <Form.Control required\r\n                                    type=\"text\" name=\"name\" value={name}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.customerChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder=\"Add meg a megrendelő nevét\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formName\">\r\n                                <Form.Label>Megrendelő telefonszáma</Form.Label>\r\n                                <Form.Control required\r\n                                    type=\"text\" name=\"phone\" value={phone}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.customerChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder=\"Add meg a megrendelő telefonszámát\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formName\">\r\n                                <Form.Label>Megrendelő email címe</Form.Label>\r\n                                <Form.Control required\r\n                                    type=\"text\" name=\"email\" value={email}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.customerChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder=\"Add meg a megrendelő email címét\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formName\">\r\n                                <Form.Label>Megrendelő weboldala</Form.Label>\r\n                                <Form.Control required\r\n                                    type=\"text\" name=\"website\" value={website}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.customerChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder=\"Add meg a megrendelő weboldalát\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formName\">\r\n                                <Form.Label>Megrendelő irányítószáma</Form.Label>\r\n                                <Form.Control required\r\n                                    type=\"text\" name=\"zipCode\" value={zipCode}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.customerChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder=\"Add meg a megrendelő irányítószámát\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formName\">\r\n                                <Form.Label>Helység neve</Form.Label>\r\n                                <Form.Control required\r\n                                    type=\"text\" name=\"locality\" value={locality}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.customerChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder=\"Add meg a helység nevét\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formName\">\r\n                                <Form.Label>Utca, házszám</Form.Label>\r\n                                <Form.Control required\r\n                                    type=\"text\" name=\"streetAddress\" value={streetAddress}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.customerChange}\r\n                                    className={\"bg-dark text-white\"}\r\n                                    placeholder=\"Add meg az utcát és a házszámot\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Link to={\"/customers\"}><Button variant=\"primary\">Vissza</Button></Link>\r\n                        <div style={{ \"display\": \"inline\", \"float\": \"right\" }}>\r\n                            <Button size=\"bg\" variant=\"success\" type=\"submit\">Mentés</Button>\r\n                            {this.state.id ? null : <Button style={{ marginLeft: \"10px\" }} size=\"bg\" variant=\"info\" type=\"reset\">Alaphelyzet</Button>}\r\n                        </div>\r\n                    </Card.Footer>\r\n                </Form>\r\n            </Card >\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NotFound.css';\r\n\r\nexport default class Project extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"notFound\">\r\n                <h1>A keresett oldal nem található!</h1>\r\n                <h3>\r\n                    <Link to=\"/login\">Vissza a főoldalra</Link>\r\n                </h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { PrivateRoute } from './components/PrivateRoute'\nimport NavigationBar from './components/NavigationBar';\nimport LoginForm from './components/LoginForm';\nimport ProjectList from './components/ProjectList';\nimport ProjectForm from './components/ProjectForm';\n// import ProjectDetails from './components/ProjectDetails';\nimport CustomerList from './components/CustomerList';\nimport CustomerForm from './components/CustomerForm';\nimport NotFound from './components/NotFound'\n\nfunction App() {\n  return (\n    <Router>\n      <NavigationBar />\n      <Container fluid={true}>\n        <Row>\n          <Col lg={12} style={{ marginTop: \"20px\" }}>\n            <Switch>\n              <Route path=\"/login\" exact component={LoginForm} />\n              <PrivateRoute path={[\"/\", \"/projects\"]} exact component={ProjectList} />\n              <PrivateRoute path=\"/projects/add\" exact component={ProjectForm} />\n              <PrivateRoute path=\"/projects/edit/:id\" exact component={ProjectForm} />\n              {/* <PrivateRoute path=\"/projects/details/:id\" exact component={ProjectDetails} /> */}\n              <PrivateRoute path=\"/customers\" exact component={CustomerList} />\n              <PrivateRoute path=\"/customers/add\" exact component={CustomerForm} />\n              <PrivateRoute path=\"/customers/edit/:id\" exact component={CustomerForm} />\n              <Route exact component={NotFound} />\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}